目前常用的自动化工具是uiautomator。对于这个测试工具，原本是用java写的，国人用python进行了重写。
它的原理是将命令以http发送到手机上的app，app监听，接收到以后调用控制台在手机上执行对应的命令。

python支持的几乎所有的自动化UI测试工具都是基于这个原理。

现总结以下几种方案：
  
  首先是工具：
    一、uiautomator
      这个就不用多说了，大家都在用，adb建立连接后，直接控制就行。经过测试验证，可以以公网、局域网、虚拟局域网远程建立连接。
      
    二、uiautomator2
      还是国人写的，在xiaocong的uiautomator基础上再度封装，增加了许多功能，引用pillow，增强截图效果，帧数大幅增加。
      原理相同，通过http转发命令，在手机上执行。由atx-server守护，atx-server是用go写的，也是国人写的，可以投屏，网页手动操作等。
      数据库使用的是rethinkdb，功能非常棒，支持android4.3以上。
      
    三、Appium
      这个库其实很好用的，支持各种语言的脚本编写，脚本运行时与server建立连接，将代码上传到server，server转发到手机上的app。
      server可以运行在本地、异地、甚至是运行在云服务器上。
      库本身的功能也十分全面。server是用node.js写的。
      
  
  建立连接的方法：
    一、本地局域网
      通过测试验证，本地局域网可直接建立连接。
    
    二、虚拟局域网
      通过建立虚拟局域网，将异地设备组入同一局域网中。
      
    三、直接公网连接
      在路由器上做端口映射，将手机本地地址和端口绑定到公网端口上，可直接通过公网IP建立与手机的连接。
      
      
  几种方法均不需要树莓派的控制，可在一台主机上分组同时管理1000台手机。实际应用时，如果网速慢，可以在主控制机上安装专业网卡和企业级路由。
